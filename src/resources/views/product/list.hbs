<style>
  body {
    font-family: "Quicksand", sans-serif;
  }

  .wrapper {
    display: flex;
    justify-content: center;
    align-items: center;
  }

  .page-link {
    position: relative;
    display: block;
    color: #17a2b8 !important;
    text-decoration: none;
    background-color: #fff;
    border: 1px solid #17a2b8 !important;
  }


  .page-link:hover {
    z-index: 2;
    color: #fff !important;
    background-color: #17a2b8;
    border-color: #024dbc;
  }


  .page-link:focus {
    z-index: 3;
    outline: 0;
    box-shadow: none;
  }

  .active {
    background-color: #17a2b8;
    color: #fff !important;
  }
</style>
<section class="row">
  <div class="col-lg-2 col-md-3 content-left pr-0">
    {{> navmanage }}
  </div>

  <script>
    function deleteConfirm() {
      if (confirm("Are you sure to delete!")) {
        return true;
      } else {
        return false;
      }
    }
  </script>

  <div class="col-lg-10 col-md-9 col-12">
    <div class="pt-2 mb-2">
      <h1 class="text-center">Product List</h1>
      {{#if error }}
      <div class="alert alert-danger text-center my-1">{{ error }}</div>
      {{/if}}
      <div class="text-center mb-2 row">
        <div class="col-6 d-flex justify-content-start align-items-center">
          <a href="product/add" class="btn btn-outline-info"><i class="bi bi-plus-circle"></i> Add</a>
        </div>
        <div class="col-6 d-flex justify-content-end align-items-center">
          <form action="/manage/product" autocomplete="off" method="GET" class="d-flex input-group w-auto">
            <input type="hidden" name="page" value="1">
            <input type="search" class="form-control" id="searchAdmin" name="search" placeholder="Search by name"
              aria-label="Search" aria-describedby="search-addon" required />
            <button class="btn btn-secondary searching" type="submit"><i class="bi bi-search"></i></button>
          </form>
          <script>
            var arrAdmin = document.getElementById("arr").value
            const myArrayAdmin = arrAdmin.split(",");
            autocomplete(document.getElementById("searchAdmin"), myArrayAdmin);
            function autocomplete(inp, arr) {
              /*the autocomplete function takes two arguments,
              the text field element and an array of possible autocompleted values:*/
              var currentFocus;
              /*execute a function when someone writes in the text field:*/
              inp.addEventListener("input", function (e) {
                var a, b, i, val = this.value;
                /*close any already open lists of autocompleted values*/
                closeAllLists();
                if (!val) { return false; }
                currentFocus = -1;
                /*create a DIV element that will contain the items (values):*/
                a = document.createElement("DIV");
                a.setAttribute("id", this.id + "autocomplete-list");
                a.setAttribute("class", "autocomplete-items");
                /*append the DIV element as a child of the autocomplete container:*/
                this.parentNode.appendChild(a);
                /*for each item in the array...*/
                for (i = 0; i < arr.length; i++) {
                  /*check if the item starts with the same letters as the text field value:*/
                  if (arr[i].substr(0, val.length).toUpperCase() == val.toUpperCase()) {
                    /*create a DIV element for each matching element:*/
                    b = document.createElement("DIV");
                    /*make the matching letters bold:*/
                    b.innerHTML = "<strong>" + arr[i].substr(0, val.length) + "</strong>";
                    b.innerHTML += arr[i].substr(val.length);
                    /*insert a input field that will hold the current array item's value:*/
                    b.innerHTML += "<input type='hidden' value='" + arr[i] + "'>";
                    /*execute a function when someone clicks on the item value (DIV element):*/
                    b.addEventListener("click", function (e) {
                      /*insert the value for the autocomplete text field:*/
                      inp.value = this.getElementsByTagName("input")[0].value;
                      /*close the list of autocompleted values,
                      (or any other open lists of autocompleted values:*/
                      closeAllLists();
                    });
                    a.appendChild(b);
                  }
                }
              });
              /*execute a function presses a key on the keyboard:*/
              inp.addEventListener("keydown", function (e) {
                var x = document.getElementById(this.id + "autocomplete-list");
                if (x) x = x.getElementsByTagName("div");
                if (e.keyCode == 40) {
                  /*If the arrow DOWN key is pressed,
                  increase the currentFocus variable:*/
                  currentFocus++;
                  /*and and make the current item more visible:*/
                  addActive(x);
                } else if (e.keyCode == 38) { //up
                  /*If the arrow UP key is pressed,
                  decrease the currentFocus variable:*/
                  currentFocus--;
                  /*and and make the current item more visible:*/
                  addActive(x);
                } else if (e.keyCode == 13) {
                  /*If the ENTER key is pressed, prevent the form from being submitted,*/
                  e.preventDefault();
                  if (currentFocus > -1) {
                    /*and simulate a click on the "active" item:*/
                    if (x) x[currentFocus].click();
                  }
                }
              });
              function addActive(x) {
                /*a function to classify an item as "active":*/
                if (!x) return false;
                /*start by removing the "active" class on all items:*/
                removeActive(x);
                if (currentFocus >= x.length) currentFocus = 0;
                if (currentFocus < 0) currentFocus = (x.length - 1);
                /*add class "autocomplete-active":*/
                x[currentFocus].classList.add("autocomplete-active");
              }
              function removeActive(x) {
                /*a function to remove the "active" class from all autocomplete items:*/
                for (var i = 0; i < x.length; i++) {
                  x[i].classList.remove("autocomplete-active");
                }
              }
              function closeAllLists(elmnt) {
                /*close all autocomplete lists in the document,
                except the one passed as an argument:*/
                var x = document.getElementsByClassName("autocomplete-items");
                for (var i = 0; i < x.length; i++) {
                  if (elmnt != x[i] && elmnt != inp) {
                    x[i].parentNode.removeChild(x[i]);
                  }
                }
              }
              /*execute a function when someone clicks in the document:*/
              document.addEventListener("click", function (e) {
                closeAllLists(e.target);
              });
            }
          </script>
        </div>
      </div>
      <table id="tableproduct" class="table table-striped table-bordered m-0" cellspacing="0" width="100%">
        <thead
          class="justify-content-md-between justify-content-sm-center align-content-center border-bottom border-2 my-2 bg-dark text-light p-3 rounded-3">
          <tr class="text-center">
            <th>
              <strong>ID</strong>
            </th>
            <th>
              <strong>Product Name</strong>
            </th>
            <th>
              <strong>Price</strong>
            </th>
            <th>
              <strong>Gender</strong>
            </th>
            <th>
              <strong>Age</strong>
            </th>
            <th>
              <strong>Quantity</strong>
            </th>
            <th>
              <strong>Image</strong>
            </th>
            <th>
              <strong>Category</strong>
            </th>
            <th>
              <strong>Supplier</strong>
            </th>
            <th>
              <strong>Shop</strong>
            </th>
            <th>
              <strong>Edit</strong>
            </th>
            <th>
              <strong>Delete</strong>
            </th>
          </tr>
        </thead>
        <tbody
          class="justify-content-md-between justify-content-sm-center border-bottom border-2 my-2 bg-light p-2 rounded-3">
          {{#if products.result }}
          {{#each products.result }}
          <tr>
            <td class="text-center align-middle">
              <a href="/view-detail/{{ this.id }}" style="text-decoration: none;">{{ sum @index 1 }}</a>
            </td>
            <td class="text-center align-middle">{{ this.name }}</td>
            <td class="text-center align-middle">{{ this.price }}</td>
            <td class="text-center align-middle">{{ this.for_gender }}</td>
            {{#ifCond this.for_age '==' 1315}}
            <td class="text-center align-middle">13 - 15</td>
            {{/ifCond}}
            {{#ifCond this.for_age '==' 1619}}
            <td class="text-center align-middle">16 - 19</td>
            {{/ifCond}}
            {{#ifCond this.for_age '==' '1319'}}
            <td class="text-center align-middle">all</td>
            {{/ifCond}}
            <td class="text-center align-middle">{{ this.quantity }}</td>
            <td class="text-center align-middle">
              <a href=""><img src="/products/{{ this.image }}" alt="{{ this.name }}" width="50" height="50" /></a>
            </td>
            <td class="text-center align-middle">{{ this.cat_name }}</td>
            <td class="text-center align-middle">{{ this.sup_name }}</td>
            <td class="text-center align-middle">{{ this.shop_name }}</td>
            <td class="text-center align-middle">
              <a href="/manage/product/show/{{ this.id }}"><i class="bi bi-pen-fill" style="color: black;"></i></a>
            </td>
            <td class="text-center align-middle">
              <form method="POST" action="product/delete/{{ this.id }}?_method=DELETE"
                onsubmit="return deleteConfirm()">
                <button type="submit" style="border: none; cursor: pointer;"><i class="bi bi-trash-fill"
                    style="color: red;"></i></button>
              </form>
              {{!-- <a href="#" class="trash" id=""><i class="bi bi-trash-fill" style="color: red;"></i></a> --}}
            </td>
          </tr>
          {{/each}}
          {{else }}
          <tr>
            <td colspan="12" class="text-center font-weight-bold">Product is empty</td>
          </tr>
          {{/if}}
        </tbody>
      </table>
      {{#ifCond products.total_page '>' 1}}
      <div class="wrapper mt-4">
        <nav aria-label="Page navigation example">
          <ul class="pagination">
            {{#if products.previous }}
            <li class="page-item"><a class="page-link"
                href="/manage/product?page={{ products.previous.page }}">Previous</a></li>
            {{/if}}
            {{#times 1 products.total_page}}
            {{#ifCond this '==' ../products.page }}
            <li class="page-item"><a class="page-link active" href="/manage/product?page={{ this }}">{{ this }}</a></li>
            {{else}}
            <li class="page-item"><a class="page-link" href="/manage/product?page={{ this }}">{{ this }}</a></li>
            {{/ifCond}}
            {{/times}}
            {{#if products.next}}
            <li class="page-item"><a class="page-link" href="/manage/product?page={{ products.next.page }}">Next</a>
            </li>
            {{/if}}
          </ul>
        </nav>
      </div>
      {{/ifCond}}
    </div>
  </div>
</section>